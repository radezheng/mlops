parameters:
- name: serviceconnectionname
  default: ''
- name: computeInstanceName
  default: 'admin5'

steps:
- checkout: self

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{ parameters.serviceconnectionname }}
    scriptType: bash
    scriptLocation: inlineScript
    workingDirectory: $(Build.SourcesDirectory)
    inlineScript: |
      set -x
      pwd
      cd src
      ls
      az extension add -n ml --allow-preview false -y
      az ml -h
      
      # Check the status of the compute instance
      STATUS=$(az ml compute show --name "${{ parameters.computeInstanceName }}" --resource-group rg-aml --workspace-name aml-ea --query "state" -o tsv)
      
      # If the compute instance is stopped, start it
      if [ "$STATUS" == "Stopped" ]; then
        echo "Compute instance is stopped. Starting it..."
        az ml compute start --name "${{ parameters.computeInstanceName }}" --resource-group rg-aml --workspace-name aml-ea
      else
        echo "Compute instance is in state: $STATUS"
      fi

      # Wait until the compute instance is running
      while [ "$STATUS" != "Running" ]; do
        echo "Waiting for compute instance to be in 'Running' state..."
        sleep 30
        STATUS=$(az ml compute show --name "${{ parameters.computeInstanceName }}" --resource-group rg-aml --workspace-name aml-ea --query "state" -o tsv)
      done
      echo "Compute instance is now running."
      az ml job create --file basic_job.yml --resource-group rg-aml --workspace-name aml-ea
  displayName: 'Run Azure Machine Learning Pipeline'